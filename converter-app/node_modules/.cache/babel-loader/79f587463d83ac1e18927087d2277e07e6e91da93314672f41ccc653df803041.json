{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Supriya\\\\Coding_Challenge\\\\converter-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [baseCurrency, setBaseCurrency] = useState('');\n  const [targetCurrency, setTargetCurrency] = useState('');\n  const [convertedAmount, setConvertedAmount] = useState('');\n  const submitData = useEffect(() => {\n    fetch('http://localhost:8080/currency').then(response => response.json()).then(data => setConvertedAmount(data));\n  }, [convertedAmount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"baseCurrency\",\n        children: \"Base Currency:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"baseCurrency\",\n        value: baseCurrency,\n        onChange: e => setBaseCurrency(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"targetCurrency\",\n        children: \"Target Currency:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"targetCurrency\",\n        value: targetCurrency,\n        onChange: e => setTargetCurrency(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitData,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), convertedAmount && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Converted amount: \", convertedAmount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IxKL7al/dg9x2LsiAAVG2q6L4pE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","amount","setAmount","baseCurrency","setBaseCurrency","targetCurrency","setTargetCurrency","convertedAmount","setConvertedAmount","submitData","fetch","then","response","json","data","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Supriya/Coding_Challenge/converter-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nfunction App() {\n  const [amount, setAmount] = useState('');\n  const [baseCurrency, setBaseCurrency] = useState('');\n  const [targetCurrency, setTargetCurrency] = useState('');\n  const [convertedAmount, setConvertedAmount] = useState('');\n\n  const submitData: any = useEffect(() => {\n      fetch('http://localhost:8080/currency')\n      .then(response => response.json())\n      .then(data => setConvertedAmount(data))\n  },[convertedAmount])\n\n  return (\n    <div>\n      <h1>Currency Converter</h1>\n      <div>\n        <label htmlFor=\"amount\">Amount:</label>\n        <input\n          type=\"number\"\n          id=\"amount\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n        </div>\n      <div>\n        <label htmlFor=\"baseCurrency\">Base Currency:</label>\n        <input\n          type=\"text\"\n          id=\"baseCurrency\"\n          value={baseCurrency}\n          onChange={(e) => setBaseCurrency(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"targetCurrency\">Target Currency:</label>\n        <input\n          type=\"text\"\n          id=\"targetCurrency\"\n          value={targetCurrency}\n          onChange={(e) => setTargetCurrency(e.target.value)}\n        />\n      </div>\n      <button onClick={submitData}>Convert</button>\n      {convertedAmount && <p>Converted amount: {convertedAmount}</p>}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}